$date
	Tue May 10 21:27:13 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module regfile_tb $end
$var wire 8 ! outB [7:0] $end
$var wire 8 " outA [7:0] $end
$var wire 2 # flagout [1:0] $end
$var reg 1 $ clk $end
$var reg 8 % datain [7:0] $end
$var reg 2 & flagin [1:0] $end
$var reg 2 ' selA [1:0] $end
$var reg 2 ( selB [1:0] $end
$var reg 1 ) we $end
$var reg 2 * writesel [1:0] $end
$scope module reg1 $end
$var wire 8 + A [7:0] $end
$var wire 8 , B [7:0] $end
$var wire 8 - data [7:0] $end
$var wire 2 . flags [1:0] $end
$var wire 2 / outflags [1:0] $end
$var wire 2 0 outselA [1:0] $end
$var wire 2 1 outselB [1:0] $end
$var wire 2 2 selwrite [1:0] $end
$var wire 1 ) we $end
$var reg 8 3 A1 [7:0] $end
$var reg 8 4 B1 [7:0] $end
$var reg 2 5 holdflag [1:0] $end
$var reg 8 6 reg0 [7:0] $end
$var reg 8 7 reg1 [7:0] $end
$var reg 8 8 reg2 [7:0] $end
$var reg 8 9 reg3 [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 : i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 :
b0 9
b0 8
b0 7
b1100 6
bx 5
bx 4
bx 3
b0 2
b0 1
b0 0
bx /
b0 .
b1100 -
bx ,
bx +
b0 *
1)
b0 (
b0 '
b0 &
b1100 %
0$
bx #
bx "
bx !
$end
#10
1$
b1 :
#20
b1100 !
b1100 ,
b1100 4
b1100 "
b1100 +
b1100 3
b0 #
b0 /
b0 5
0$
b10 :
b11 %
b11 -
b1 *
b1 2
0)
#30
1$
b11 :
#40
b1 8
0$
b100 :
b1 %
b1 -
b10 (
b10 1
b10 '
b10 0
b10 *
b10 2
1)
#50
b10 9
1$
b101 :
b10 %
b10 -
b11 *
b11 2
#60
0$
b110 :
#70
1$
b111 :
#80
b1 !
b1 ,
b1 4
b10 "
b10 +
b10 3
0$
b1000 :
b11 '
b11 0
0)
#90
1$
b1001 :
#100
0$
b1010 :
#110
1$
b1011 :
#120
0$
b1100 :
#130
1$
b1101 :
#140
0$
b1110 :
#150
1$
b1111 :
#160
0$
b10000 :
#170
1$
b10001 :
#180
0$
b10010 :
#190
1$
b10011 :
#200
b10100 :
