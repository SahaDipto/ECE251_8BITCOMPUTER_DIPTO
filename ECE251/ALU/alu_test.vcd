$date
	Fri May 06 19:43:31 2022
$end
$version
	Icarus Verilog
$end
$timescale
	10ns
$end
$scope module test $end
$var wire 8 ! out1 [7:0] $end
$var wire 2 " flag [1:0] $end
$var reg 1 # clk $end
$var reg 8 $ in1 [7:0] $end
$var reg 8 % in2 [7:0] $end
$var reg 4 & op [3:0] $end
$scope module alu1 $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 4 ) opcase [3:0] $end
$var wire 2 * flags [1:0] $end
$var reg 8 + out1 [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 , i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ,
b0 +
b1 *
b1 )
b101 (
b1010 '
b1 &
b101 %
b1010 $
1#
b1 "
b0 !
$end
#10
b1 ,
0#
#20
b0 "
b0 *
b1111 !
b1111 +
b10 &
b10 )
b10 ,
1#
#30
b11 ,
0#
#40
b10 "
b10 *
b11111111 !
b11111111 +
b11 &
b11 )
b100 ,
1#
#50
b101 ,
0#
#60
b0 "
b0 *
b1111 !
b1111 +
b100 &
b100 )
b110 ,
1#
#70
b111 ,
0#
#80
b101 !
b101 +
b101 &
b101 )
b1000 ,
1#
#90
b1001 ,
0#
#100
b0 "
b0 *
b110010 !
b110010 +
b110 &
b110 )
b1010 ,
1#
